version: '3'

services:
  backend:
    build:
      context: .
    expose:
      - 8000
    volumes:
      - static_files:/app/static
      - ./media:/app/media
      - ./logs:/app/logs
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started


  postgres:
    image: postgres:16.1-alpine3.19
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready --username=$POSTGRES_USER --dbname=$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_files:/app/static
      - media_volume:/app/media
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
  static_files:
  media_volume: